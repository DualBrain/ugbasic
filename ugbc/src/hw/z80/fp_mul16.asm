; z80float is a floating point library targeting the Z80 processor. While this
; project is tested on a TI-84+, the code should be generic enough to run on any
; Z80 CPU with very little modification (mostly defining scrap RAM locations).
;
; adapted by Marco Spedaletti

FPMUL16:
	LD	A, D
	LD	D, 0
	LD	H, B
	LD	L, C
	ADD	A, A
	JR	C, FPMUL_BC_DE_DEHL_BIT14
	ADD	A, A
	JR	C, FPMUL_BC_DE_DEHL_BIT13
	ADD	A, A
	JR	C, FPMUL_BC_DE_DEHL_BIT12
	ADD	A, A
	JR	C, FPMUL_BC_DE_DEHL_BIT11
	ADD	A, A
	JR	C, FPMUL_BC_DE_DEHL_BIT10
	ADD	A, A
	JR	C, FPMUL_BC_DE_DEHL_BIT9
	ADD	A, A
	JR	C, FPMUL_BC_DE_DEHL_BIT8
	ADD	A, A
	JR	C, FPMUL_BC_DE_DEHL_BIT7
	LD	A, E
 	AND	%11111110
	ADD	A, A
	JR	C, FPMUL_BC_DE_DEHL_BIT6
	ADD	A, A
	JR	C, FPMUL_BC_DE_DEHL_BIT5
	ADD	A, A
	JR	C, FPMUL_BC_DE_DEHL_BIT4
	ADD	A, A
	JR	C, FPMUL_BC_DE_DEHL_BIT3
	ADD	A, A
	JR	C, FPMUL_BC_DE_DEHL_BIT2
	ADD	A, A
	JR	C, FPMUL_BC_DE_DEHL_BIT1
	ADD	A, A
	JR	C, FPMUL_BC_DE_DEHL_BIT0
	RR	E
	RET	C
	LD	H, D
	LD	L, E
	RET

FPMUL_BC_DE_DEHL_BIT14:
	ADD	HL, HL
	ADC	A, A
	JR	NC, FPMUL_BC_DE_DEHL_BIT13
	ADD	HL, BC
	ADC	A, D
FPMUL_BC_DE_DEHL_BIT13:
	ADD	HL, HL
	ADC	A, A
	JR	NC, FPMUL_BC_DE_DEHL_BIT12
	ADD	HL, BC
	ADC	A, D
FPMUL_BC_DE_DEHL_BIT12:
	ADD	HL, HL
	ADC	A, A
	JR	NC, FPMUL_BC_DE_DEHL_BIT11
	ADD	HL, BC
	ADC	A, D
FPMUL_BC_DE_DEHL_BIT11:
	ADD	HL, HL
	ADC	A, A
	JR	NC, FPMUL_BC_DE_DEHL_BIT10
	ADD	HL, BC
	ADC	A, D
FPMUL_BC_DE_DEHL_BIT10:
	ADD	HL, HL
	ADC	A, A
	JR	NC, FPMUL_BC_DE_DEHL_BIT9
	ADD	HL, BC
	ADC	A, D
FPMUL_BC_DE_DEHL_BIT9:
	ADD	HL, HL
	ADC	A, A
	JR	NC, FPMUL_BC_DE_DEHL_BIT8
	ADD	HL, BC
	ADC	A, D
FPMUL_BC_DE_DEHL_BIT8:
	ADD	HL, HL
	ADC	A, A
	JR	NC, FPMUL_BC_DE_DEHL_BIT7
	ADD	HL, BC
	ADC	A, D
FPMUL_BC_DE_DEHL_BIT7:
	LD	D, A
	LD	A, E
	AND	%11111110
	ADD	HL, HL
	ADC	A, A
	JR	NC, FPMUL_BC_DE_DEHL_BIT6
	ADD	HL, BC
	ADC	A, 0
FPMUL_BC_DE_DEHL_BIT6:
	ADD	HL, HL
	ADC	A, A
	JR	NC, FPMUL_BC_DE_DEHL_BIT5
	ADD	HL, BC
	ADC	A, 0
FPMUL_BC_DE_DEHL_BIT5:
	ADD	HL, HL
	ADC	A, A
	JR	NC, FPMUL_BC_DE_DEHL_BIT4
	ADD	HL, BC
	ADC	A, 0
FPMUL_BC_DE_DEHL_BIT4:
	ADD	HL, HL
	ADC	A, A
	JR	NC, FPMUL_BC_DE_DEHL_BIT3
	ADD	HL, BC
	ADC	A, 0
FPMUL_BC_DE_DEHL_BIT3:
	ADD	HL, HL
	ADC	A, A
	JR	NC, FPMUL_BC_DE_DEHL_BIT2
	ADD	HL, BC
	ADC	A, 0
FPMUL_BC_DE_DEHL_BIT2:
	ADD	HL, HL
	ADC	A, A
	JR	NC, FPMUL_BC_DE_DEHL_BIT1
	ADD	HL, BC
	ADC	A, 0
FPMUL_BC_DE_DEHL_BIT1:
	ADD	HL, HL
	ADC	A, A
	JR	NC, FPMUL_BC_DE_DEHL_BIT0
	ADD	HL, BC
	ADC	A, 0
FPMUL_BC_DE_DEHL_BIT0:
	ADD	HL, HL
	ADC	A, A
	JR	C, FPMUL_BC_DE_DEHL_FUNKYCARRY
	RR	E
	LD	E, A
	RET	NC
	ADD	HL, BC
	RET	NC
	INC	E
	RET	NZ
	INC	D
	RET

FPMUL_BC_DE_DEHL_FUNKYCARRY:
	INC	D
	RR	E
	LD	E, A
	RET	NC
	ADD	HL, BC
	RET	NC
	INC	E
	RET
